pipeline {

  agent {
    label 'CAE-Jenkins2-DH-Agents-Linux'
  }

  environment {
    // Please refer to the below document for Jenkins credentials
    // It automatically sets ARTIFACT_CREDENTIAL_USR and ARTIFACT_CREDENTIAL_PSW
    // https://www.jenkins.io/doc/book/pipeline/jenkinsfile/#usernames-and-passwords
    ARTIFACTORY_CREDENTIALS = credentials('Artifactory-credential')
    LD_LIBRARY_PATH = "/usr/local/lib64:/usr/local/lib:/usr/lib64:/usr/lib"
    TESTRAIL_API_KEY = credentials('testrail-api-key')
    TESTRAIL_URL = "https://cae-testrail.jpl.nasa.gov/testrail/"
    TESTRAIL_SUITE_ID = 4115
    TESTRAIL_USERNAME = credentials('testrail-username')
  }

  stages {
    stage ('Setup') {
      steps {
        echo "Printing environment variables..."
        sh "env | sort"
      }
    }
    stage('Enter Docker Container') {
      agent {
        docker {
          reuseNode true
          registryUrl 'https://cae-artifactory.jpl.nasa.gov:16001'
          registryCredentialsId 'Artifactory-credential'
          image 'gov/nasa/jpl/ammos/mpsa/aerie/jenkins/aerie-nightly:latest'
          alwaysPull true
          args "-u root --mount type=bind,source=${WORKSPACE},target=/home"
        }
      }
      stages {
        stage ('Build') {
          steps {
            echo "Building $GIT_BRANCH..."
            sh './gradlew classes'
          }
        }
        stage ('Test') {
          steps {
            script {
              temp_dir = sh(returnStdout: true, script: "mktemp -d -p ${WORKSPACE}").toString().trim()
              sh """
                ./gradlew test
                mkdir -p ${temp_dir}/test-results
                find . -name "TEST-*.xml" -exec cp {} ${temp_dir}/test-results \\;
                cd /scripts/testrail
                ./main.py ${temp_dir}/test-results ${TESTRAIL_SUITE_ID}
              """
              sh 'find . -name "TEST-*.xml" -exec touch {} \\;'
              junit testResults: '*/build/test-results/test/*.xml'
              sh "rm -rf ${temp_dir}"
            }
          }
        }
        stage ('Publish Snapshot') {
          steps {
            sh "./gradlew publish \
                -PjplArtifactoryUsername=${env.ARTIFACTORY_CREDENTIALS_USR}\
                -PjplArtifactoryPassword=${env.ARTIFACTORY_CREDENTIALS_PSW}\
                --info"
          }
        }
      }
      post {
        cleanup {
          cleanWs()
          deleteDir()
        }
      }
    }
  }
  post {
    unstable {
      emailext subject: "Jenkins UNSTABLE: ${env.JOB_BASE_NAME} #${env.BUILD_NUMBER}",
      body: """
          <p>Jenkins job unstable (failed tests): <br> <a href=\"${env.BUILD_URL}\">${env.JOB_NAME} #${env.BUILD_NUMBER}</a></p>
      """,
      mimeType: 'text/html',
      recipientProviders: [[$class: 'FailingTestSuspectsRecipientProvider']]
    }
    failure {
      emailext subject: "Jenkins FAILURE: ${env.JOB_BASE_NAME} #${env.BUILD_NUMBER}",
      body: """
          <p>Jenkins job failure: <br> <a href=\"${env.BUILD_URL}\">${env.JOB_NAME} #${env.BUILD_NUMBER}</a></p>
      """,
      mimeType: 'text/html',
      recipientProviders: [[$class: 'CulpritsRecipientProvider']]
    }
    cleanup {
      cleanWs()
      deleteDir()
    }
  }
}
