version: "3.7"
services:
  aerie-gateway:
    container_name: aerie-gateway
    depends_on: ["postgres"]
    environment:
      AUTH_TYPE: none
      AUTH_URL: https://atb-ocio-12b.jpl.nasa.gov:8443/cam-api
      GQL_API_URL: http://localhost:8080/v1/graphql
      LOG_FILE: console
      LOG_LEVEL: debug
      NODE_TLS_REJECT_UNAUTHORIZED: "0"
      PORT: 9000
      POSTGRES_AERIE_MERLIN_DB: aerie_merlin
      POSTGRES_HOST: postgres
      POSTGRES_PASSWORD: "${AERIE_PASSWORD}"
      POSTGRES_PORT: 5432
      POSTGRES_USER: "${AERIE_USERNAME}"
    image: "ghcr.io/nasa-ammos/aerie-gateway:develop"
    ports: ["9000:9000"]
    restart: always
    volumes:
      - aerie_file_store:/app/files
  aerie-merlin:
    build:
      context: ./merlin-server
      dockerfile: Dockerfile
    container_name: aerie-merlin
    depends_on: ["postgres"]
    environment:
      MERLIN_DB: "aerie_merlin"
      MERLIN_DB_PASSWORD: "${AERIE_PASSWORD}"
      MERLIN_DB_PORT: 5432
      MERLIN_DB_SERVER: postgres
      MERLIN_DB_USER: "${AERIE_USERNAME}"
      MERLIN_LOCAL_STORE: /usr/src/app/merlin_file_store
      MERLIN_PORT: 27183
      JAVA_OPTS: >
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
        -Dorg.slf4j.simpleLogger.defaultLogLevel=DEBUG
        -Dorg.slf4j.simpleLogger.log.com.zaxxer.hikari=INFO
        -Dorg.slf4j.simpleLogger.logFile=System.err
      UNTRUE_PLAN_START: "2000-01-01T11:58:55.816Z"
    ports: ["27183:27183", "5005:5005"]
    restart: always
    volumes:
      - aerie_file_store:/usr/src/app/merlin_file_store
  aerie-scheduler:
    build:
      context: ./scheduler-server
      dockerfile: Dockerfile
    container_name: aerie-scheduler
    depends_on: ["aerie-merlin", "postgres"]
    environment:
      MERLIN_GRAPHQL_URL: http://hasura:8080/v1/graphql
      SCHEDULER_DB: "aerie_scheduler"
      SCHEDULER_DB_PASSWORD: "${AERIE_PASSWORD}"
      SCHEDULER_DB_PORT: 5432
      SCHEDULER_DB_SERVER: postgres
      SCHEDULER_DB_USER: "${AERIE_USERNAME}"
      SCHEDULER_PORT: 27185
      JAVA_OPTS: >
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
        -Dorg.slf4j.simpleLogger.defaultLogLevel=DEBUG
        -Dorg.slf4j.simpleLogger.log.com.zaxxer.hikari=INFO
        -Dorg.slf4j.simpleLogger.logFile=System.err
    ports: ["27185:27185", "5006:5005"]
    restart: always
    volumes:
      - aerie_file_store:/usr/src/app/merlin_file_store
  aerie-sequencing:
    build:
      context: ./sequencing-server
      dockerfile: Dockerfile
    container_name: aerie-sequencing
    depends_on: ["postgres"]
    environment:
      LOG_FILE: console
      LOG_LEVEL: debug
      MERLIN_GRAPHQL_URL: http://hasura:8080/v1/graphql
      SEQUENCING_SERVER_PORT: 27184
      SEQUENCING_DB: aerie_sequencing
      SEQUENCING_DB_PASSWORD: "${AERIE_PASSWORD}"
      SEQUENCING_DB_PORT: 5432
      SEQUENCING_DB_SERVER: postgres
      SEQUENCING_DB_USER: "${AERIE_USERNAME}"
      SEQUENCING_LOCAL_STORE: /usr/src/app/sequencing_file_store
    ports: ["27184:27184"]
    restart: always
    volumes:
      - aerie_file_store:/usr/src/app/sequencing_file_store
  aerie-ui:
    container_name: aerie-ui
    depends_on: ["postgres"]
    environment:
      NODE_TLS_REJECT_UNAUTHORIZED: "0"
      ORIGIN: http://localhost
      PUBLIC_AUTH_TYPE: none
      PUBLIC_GATEWAY_CLIENT_URL: http://localhost:9000
      PUBLIC_GATEWAY_SERVER_URL: http://aerie-gateway:9000
      PUBLIC_HASURA_CLIENT_URL: http://localhost:8080/v1/graphql
      PUBLIC_HASURA_SERVER_URL: http://hasura:8080/v1/graphql
      PUBLIC_HASURA_WEB_SOCKET_URL: ws://localhost:8080/v1/graphql
    image: "ghcr.io/nasa-ammos/aerie-ui:develop"
    ports: ["80:80"]
    restart: always
  aerie-merlin-worker-1:
    build:
      context: ./merlin-worker
      dockerfile: Dockerfile
    container_name: aerie-merlin-worker-1
    depends_on: ["postgres"]
    environment:
      MERLIN_WORKER_DB: "aerie_merlin"
      MERLIN_WORKER_DB_PASSWORD: "${AERIE_PASSWORD}"
      MERLIN_WORKER_DB_PORT: 5432
      MERLIN_WORKER_DB_SERVER: postgres
      MERLIN_WORKER_DB_USER: "${AERIE_USERNAME}"
      MERLIN_WORKER_LOCAL_STORE: /usr/src/app/merlin_file_store
      JAVA_OPTS: >
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
        -Dorg.slf4j.simpleLogger.defaultLogLevel=DEBUG
        -Dorg.slf4j.simpleLogger.log.com.zaxxer.hikari=INFO
        -Dorg.slf4j.simpleLogger.logFile=System.err
      UNTRUE_PLAN_START: "2000-01-01T11:58:55.816Z"
    ports: ["5007:5005", "27187:8080"]
    restart: always
    volumes:
      - aerie_file_store:/usr/src/app/merlin_file_store:ro
  aerie-merlin-worker-2:
    build:
      context: ./merlin-worker
      dockerfile: Dockerfile
    container_name: aerie-merlin-worker-2
    depends_on: ["postgres"]
    environment:
      MERLIN_WORKER_DB: "aerie_merlin"
      MERLIN_WORKER_DB_PASSWORD: "${AERIE_PASSWORD}"
      MERLIN_WORKER_DB_PORT: 5432
      MERLIN_WORKER_DB_SERVER: postgres
      MERLIN_WORKER_DB_USER: "${AERIE_USERNAME}"
      MERLIN_WORKER_LOCAL_STORE: /usr/src/app/merlin_file_store
      JAVA_OPTS: >
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
        -Dorg.slf4j.simpleLogger.defaultLogLevel=DEBUG
        -Dorg.slf4j.simpleLogger.log.com.zaxxer.hikari=INFO
        -Dorg.slf4j.simpleLogger.logFile=System.err
      UNTRUE_PLAN_START: "2000-01-01T11:58:55.816Z"
    ports: ["5008:5005", "27188:8080"]
    restart: always
    volumes:
      - aerie_file_store:/usr/src/app/merlin_file_store:ro
  aerie-scheduler-worker-1:
    build:
      context: ./scheduler-worker
      dockerfile: Dockerfile
    container_name: aerie-scheduler-worker-1
    depends_on: ["postgres"]
    environment:
      MERLIN_GRAPHQL_URL: http://hasura:8080/v1/graphql
      SCHEDULER_WORKER_DB: "aerie_scheduler"
      SCHEDULER_WORKER_DB_PASSWORD: "${AERIE_PASSWORD}"
      SCHEDULER_WORKER_DB_PORT: 5432
      SCHEDULER_WORKER_DB_SERVER: postgres
      SCHEDULER_WORKER_DB_USER: "${AERIE_USERNAME}"
      SCHEDULER_OUTPUT_MODE: UpdateInputPlanWithNewActivities
      MERLIN_LOCAL_STORE: /usr/src/app/merlin_file_store
      SCHEDULER_RULES_JAR: /usr/src/app/merlin_file_store/scheduler_rules.jar
      JAVA_OPTS: >
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
        -Dorg.slf4j.simpleLogger.defaultLogLevel=DEBUG
        -Dorg.slf4j.simpleLogger.log.com.zaxxer.hikari=INFO
        -Dorg.slf4j.simpleLogger.logFile=System.err
    ports: ["5009:5005", "27189:8080"]
    restart: always
    volumes:
      - aerie_file_store:/usr/src/app/merlin_file_store:ro
  aerie-scheduler-worker-2:
    build:
      context: ./scheduler-worker
      dockerfile: Dockerfile
    container_name: aerie-scheduler-worker-2
    depends_on: ["postgres"]
    environment:
      MERLIN_GRAPHQL_URL: http://hasura:8080/v1/graphql
      SCHEDULER_WORKER_DB: "aerie_scheduler"
      SCHEDULER_WORKER_DB_PASSWORD: "${AERIE_PASSWORD}"
      SCHEDULER_WORKER_DB_PORT: 5432
      SCHEDULER_WORKER_DB_SERVER: postgres
      SCHEDULER_WORKER_DB_USER: "${AERIE_USERNAME}"
      SCHEDULER_OUTPUT_MODE: UpdateInputPlanWithNewActivities
      MERLIN_LOCAL_STORE: /usr/src/app/merlin_file_store
      SCHEDULER_RULES_JAR: /usr/src/app/merlin_file_store/scheduler_rules.jar
      JAVA_OPTS: >
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
        -Dorg.slf4j.simpleLogger.defaultLogLevel=DEBUG
        -Dorg.slf4j.simpleLogger.log.com.zaxxer.hikari=INFO
        -Dorg.slf4j.simpleLogger.logFile=System.err
    ports: ["5010:5005", "27190:8080"]
    restart: always
    volumes:
      - aerie_file_store:/usr/src/app/merlin_file_store:ro
  hasura:
    container_name: aerie-hasura
    depends_on: ["postgres"]
    environment:
      AERIE_MERLIN_DATABASE_URL: "postgres://${AERIE_USERNAME}:${AERIE_PASSWORD}@postgres:5432/aerie_merlin"
      AERIE_SCHEDULER_DATABASE_URL: "postgres://${AERIE_USERNAME}:${AERIE_PASSWORD}@postgres:5432/aerie_scheduler"
      AERIE_SEQUENCING_DATABASE_URL: "postgres://${AERIE_USERNAME}:${AERIE_PASSWORD}@postgres:5432/aerie_sequencing"
      AERIE_UI_DATABASE_URL: "postgres://${AERIE_USERNAME}:${AERIE_PASSWORD}@postgres:5432/aerie_ui"
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_LOG_LEVEL: info
      HASURA_GRAPHQL_METADATA_DATABASE_URL: "postgres://${AERIE_USERNAME}:${AERIE_PASSWORD}@postgres:5432/aerie_hasura"
      HASURA_GRAPHQL_METADATA_DIR: /hasura-metadata
    image: "hasura/graphql-engine:v2.12.1.cli-migrations-v3"
    ports: ["8080:8080"]
    restart: always
    volumes:
      - ./deployment/hasura/metadata:/hasura-metadata
  postgres:
    container_name: aerie-postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_USER: "${POSTGRES_USER}"
      AERIE_USERNAME: "${AERIE_USERNAME}"
      AERIE_PASSWORD: "${AERIE_PASSWORD}"
    image: postgres:14.1
    ports: ["5432:5432"]
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deployment/postgres-init-db:/docker-entrypoint-initdb.d

volumes:
  aerie_file_store:
  mission_file_store:
  postgres_data:
