Aerie Editor (Falcon) is a web-based [Visual Studio Code](https://code.visualstudio.com/) (VS Code) text editor that supports code completion, error diagnostics, tooltips, syntax highlighting, snippets, bracket-matching, auto-indentation, and [many more](https://code.visualstudio.com/docs/editor/whyvscode) robust features.

## Installation

The editor needs to be installed on a machine for each user in their home directory. This ensures the users files are available for editing in the explorer and are not exposed to other users on the system. You can find more complete installation instructions [here](https://github.jpl.nasa.gov/Aerie/aerie-editor/blob/develop/docs/DEPLOYMENT.md).

## Basic Usage

The editor can be integrated with mission SEQGEN adaptations by adding an SMF file to the editor [workspace](https://code.visualstudio.com/docs/editor/multi-root-workspaces). The editor parses SMF files in the workspace and uses them to validate sequences. The editor also outputs sequences in both the SASF and SATF formats, which can be ingested by SEQGEN to create an SSF file. In Figure 1 below, the SMF file can be seen in the workspace. As users start typing valid command stems, an autocomplete popover appears, filtering and listing all commands starting with that stem.

![](https://github.jpl.nasa.gov/MPS/aerie/blob/develop/docs/UserGuideImages/fig%207.png)  
*Figure 1: Code completion of commands based on SMF file in the workspace.*

Additionally, Figure 2 shows the support for real-time sequence validation as users type commands. For wrong command stems, missing parameters, or wrong parameter names, the incorrect area will be underlined in red and an error message tooltip will be displayed upon hover.

![](https://github.jpl.nasa.gov/MPS/aerie/blob/develop/docs/UserGuideImages/fig%208.png)  
*Figure 2: Error diagnostics of incorrect parameter names for a command.*

## Git Integration

All files in the workspace live on the editor installation machine. However, there is inherent support for pointing the application to a [Git](https://git-scm.com/) repository where files may be shared and stored for the whole mission. Git is available if the workspace is pointed to a directory that contains a [.git](https://githowto.com/git_internals_git_directory) directory. For more advanced integration on VS Code and Git, please refer to the [VS Code Git](https://code.visualstudio.com/docs/editor/versioncontrol#_git-support) documentation. 

## Explorer

Users can create, delete, and rename files and directories via the Explorer. For a more detailed explanation   see the [VS Code Explorer](https://code.visualstudio.com/docs/getstarted/userinterface#_explorer) documentation.

![](https://github.jpl.nasa.gov/MPS/aerie/blob/develop/docs/UserGuideImages/fig%209.png) 
*Figure 3: To create files and folders use the icons shown at the upper right corner of the Explorer.*
 
![](https://github.jpl.nasa.gov/MPS/aerie/blob/develop/docs/UserGuideImages/fig%2010.png)  
*Figure 4: To rename any file or folder double click on the name, which will turn name field into an input box.*

## SEQGEN Integration

To invoke SEQGEN, click the button that shows up at the bottom of the editor window that says `run Seqgen`. Note that the button will only show up if SEQGEN and [eurcseq](https://github.jpl.nasa.gov/Europa-PESS/sequencing) is installed on the machine (on the `PATH`) that the editor is installed on. After running SEQGEN, the SSF file will be added to the editor workspace. If the workspace is a Git repository then the output files will be added to the repo as changed files but not as commits. To add them to the repo, users need to do a commit and push.

### Configuration

To configure running SEQGEN, you need to create a file called `settings.json` in the [.vscode](https://code.visualstudio.com/docs/getstarted/settings) folder in your workspace. It should have the following properties:

```json
{
  "seq.seqgenInputDir": "",
  "seq.seqgenOutputDir": "",
  "seq.smfDirs": []
}

```

| Property | Description |
|-|-|
| seqgenInputDir | Absolute path to the directory containing `.seq` files |
| seqgenOutputDir | Absolute path of output directory for SEQGEN |
| smfDirs | A list of directory absolute paths containing SMF files |