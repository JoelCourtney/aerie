// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package gov.nasa.jpl.aerie.scheduler.aerie;

import com.apollographql.apollo.api.*;
import com.apollographql.apollo.api.internal.*;
import gov.nasa.jpl.aerie.scheduler.aerie.type.CustomType;
import okio.Buffer;
import okio.BufferedSource;
import okio.ByteString;
import org.jetbrains.annotations.NotNull;

import java.io.IOException;
import java.util.Collections;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

public final class ResourceTypesQuery implements Query<ResourceTypesQuery.Data, ResourceTypesQuery.Data, ResourceTypesQuery.Variables> {
  public static final String OPERATION_ID = "f8ca86e23a0afbe83a294638ce05a18238626a916b8f0119d8782886e18cfe3c";

  public static final String QUERY_DOCUMENT = QueryDocumentMinifier.minify(
    "query ResourceTypes($adaptationId: ID!) {\n"
        + "  resourceTypes(adaptationId: $adaptationId) {\n"
        + "    __typename\n"
        + "    name\n"
        + "    schema\n"
        + "  }\n"
        + "}"
  );

  public static final OperationName OPERATION_NAME = new OperationName() {
    @Override
    public String name() {
      return "ResourceTypes";
    }
  };

  private final Variables variables;

  public ResourceTypesQuery(@NotNull String adaptationId) {
    Utils.checkNotNull(adaptationId, "adaptationId == null");
    variables = new Variables(adaptationId);
  }

  @Override
  public String operationId() {
    return OPERATION_ID;
  }

  @Override
  public String queryDocument() {
    return QUERY_DOCUMENT;
  }

  @Override
  public Data wrapData(Data data) {
    return data;
  }

  @Override
  public Variables variables() {
    return variables;
  }

  @Override
  public ResponseFieldMapper<Data> responseFieldMapper() {
    return new Data.Mapper();
  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public OperationName name() {
    return OPERATION_NAME;
  }

  @Override
  @NotNull
  public Response<Data> parse(@NotNull final BufferedSource source,
                              @NotNull final ScalarTypeAdapters scalarTypeAdapters) throws IOException {
    return SimpleOperationResponseParser.parse(source, this, scalarTypeAdapters);
  }

  @Override
  @NotNull
  public Response<Data> parse(@NotNull final ByteString byteString,
                              @NotNull final ScalarTypeAdapters scalarTypeAdapters) throws IOException {
    return parse(new Buffer().write(byteString), scalarTypeAdapters);
  }

  @Override
  @NotNull
  public Response<Data> parse(@NotNull final BufferedSource source) throws
      IOException {
    return parse(source, ScalarTypeAdapters.DEFAULT);
  }

  @Override
  @NotNull
  public Response<Data> parse(@NotNull final ByteString byteString) throws
      IOException {
    return parse(byteString, ScalarTypeAdapters.DEFAULT);
  }

  @Override
  @NotNull
  public ByteString composeRequestBody(@NotNull final ScalarTypeAdapters scalarTypeAdapters) {
    return OperationRequestBodyComposer.compose(this, false, true, scalarTypeAdapters);
  }

  @NotNull
  @Override
  public ByteString composeRequestBody() {
    return OperationRequestBodyComposer.compose(this, false, true, ScalarTypeAdapters.DEFAULT);
  }

  @Override
  @NotNull
  public ByteString composeRequestBody(final boolean autoPersistQueries,
      final boolean withQueryDocument, @NotNull final ScalarTypeAdapters scalarTypeAdapters) {
    return OperationRequestBodyComposer.compose(this, autoPersistQueries, withQueryDocument, scalarTypeAdapters);
  }

  public static final class Builder {
    private @NotNull String adaptationId;

    Builder() {
    }

    public Builder adaptationId(@NotNull String adaptationId) {
      this.adaptationId = adaptationId;
      return this;
    }

    public ResourceTypesQuery build() {
      Utils.checkNotNull(adaptationId, "adaptationId == null");
      return new ResourceTypesQuery(adaptationId);
    }
  }

  public static final class Variables extends Operation.Variables {
    private final @NotNull String adaptationId;

    private final transient Map<String, Object> valueMap = new LinkedHashMap<>();

    Variables(@NotNull String adaptationId) {
      this.adaptationId = adaptationId;
      this.valueMap.put("adaptationId", adaptationId);
    }

    public @NotNull String adaptationId() {
      return adaptationId;
    }

    @Override
    public Map<String, Object> valueMap() {
      return Collections.unmodifiableMap(valueMap);
    }

    @Override
    public InputFieldMarshaller marshaller() {
      return new InputFieldMarshaller() {
        @Override
        public void marshal(InputFieldWriter writer) throws IOException {
          writer.writeCustom("adaptationId", gov.nasa.jpl.aerie.scheduler.aerie.type.CustomType.ID, adaptationId);
        }
      };
    }
  }

  /**
   * Data from the response after executing this GraphQL operation
   */
  public static class Data implements Operation.Data {
    static final ResponseField[] $responseFields = {
      ResponseField.forList("resourceTypes", "resourceTypes", new UnmodifiableMapBuilder<String, Object>(1)
      .put("adaptationId", new UnmodifiableMapBuilder<String, Object>(2)
        .put("kind", "Variable")
        .put("variableName", "adaptationId")
        .build())
      .build(), false, Collections.<ResponseField.Condition>emptyList())
    };

    final @NotNull List<ResourceType> resourceTypes;

    private transient volatile String $toString;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public Data(@NotNull List<ResourceType> resourceTypes) {
      this.resourceTypes = Utils.checkNotNull(resourceTypes, "resourceTypes == null");
    }

    public @NotNull List<ResourceType> resourceTypes() {
      return this.resourceTypes;
    }

    @SuppressWarnings({"rawtypes", "unchecked"})
    public ResponseFieldMarshaller marshaller() {
      return new ResponseFieldMarshaller() {
        @Override
        public void marshal(ResponseWriter writer) {
          writer.writeList($responseFields[0], resourceTypes, new ResponseWriter.ListWriter() {
            @Override
            public void write(List items, ResponseWriter.ListItemWriter listItemWriter) {
              for (Object item : items) {
                listItemWriter.writeObject(((ResourceType) item).marshaller());
              }
            }
          });
        }
      };
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Data{"
          + "resourceTypes=" + resourceTypes
          + "}";
      }
      return $toString;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Data) {
        Data that = (Data) o;
        return this.resourceTypes.equals(that.resourceTypes);
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= resourceTypes.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    public static final class Mapper implements ResponseFieldMapper<Data> {
      final ResourceType.Mapper resourceTypeFieldMapper = new ResourceType.Mapper();

      @Override
      public Data map(ResponseReader reader) {
        final List<ResourceType> resourceTypes = reader.readList($responseFields[0], new ResponseReader.ListReader<ResourceType>() {
          @Override
          public ResourceType read(ResponseReader.ListItemReader listItemReader) {
            return listItemReader.readObject(new ResponseReader.ObjectReader<ResourceType>() {
              @Override
              public ResourceType read(ResponseReader reader) {
                return resourceTypeFieldMapper.map(reader);
              }
            });
          }
        });
        return new Data(resourceTypes);
      }
    }
  }

  public static class ResourceType {
    static final ResponseField[] $responseFields = {
      ResponseField.forString("__typename", "__typename", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("name", "name", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forCustomType("schema", "schema", null, false, CustomType.RESOURCESCHEMA, Collections.<ResponseField.Condition>emptyList())
    };

    final @NotNull String __typename;

    final @NotNull String name;

    final @NotNull Object schema;

    private transient volatile String $toString;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public ResourceType(@NotNull String __typename, @NotNull String name, @NotNull Object schema) {
      this.__typename = Utils.checkNotNull(__typename, "__typename == null");
      this.name = Utils.checkNotNull(name, "name == null");
      this.schema = Utils.checkNotNull(schema, "schema == null");
    }

    public @NotNull String __typename() {
      return this.__typename;
    }

    public @NotNull String name() {
      return this.name;
    }

    public @NotNull Object schema() {
      return this.schema;
    }

    @SuppressWarnings({"rawtypes", "unchecked"})
    public ResponseFieldMarshaller marshaller() {
      return new ResponseFieldMarshaller() {
        @Override
        public void marshal(ResponseWriter writer) {
          writer.writeString($responseFields[0], __typename);
          writer.writeString($responseFields[1], name);
          writer.writeCustom((ResponseField.CustomTypeField) $responseFields[2], schema);
        }
      };
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "ResourceType{"
          + "__typename=" + __typename + ", "
          + "name=" + name + ", "
          + "schema=" + schema
          + "}";
      }
      return $toString;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof ResourceType) {
        ResourceType that = (ResourceType) o;
        return this.__typename.equals(that.__typename)
         && this.name.equals(that.name)
         && this.schema.equals(that.schema);
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= __typename.hashCode();
        h *= 1000003;
        h ^= name.hashCode();
        h *= 1000003;
        h ^= schema.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    public static final class Mapper implements ResponseFieldMapper<ResourceType> {
      @Override
      public ResourceType map(ResponseReader reader) {
        final String __typename = reader.readString($responseFields[0]);
        final String name = reader.readString($responseFields[1]);
        final Object schema = reader.readCustomType((ResponseField.CustomTypeField) $responseFields[2]);
        return new ResourceType(__typename, name, schema);
      }
    }
  }
}
