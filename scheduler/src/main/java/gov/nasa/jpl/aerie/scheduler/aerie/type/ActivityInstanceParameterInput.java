// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package gov.nasa.jpl.aerie.scheduler.aerie.type;

import com.apollographql.apollo.api.Input;
import com.apollographql.apollo.api.InputType;
import com.apollographql.apollo.api.internal.InputFieldMarshaller;
import com.apollographql.apollo.api.internal.InputFieldWriter;
import com.apollographql.apollo.api.internal.Utils;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

import java.io.IOException;

public final class ActivityInstanceParameterInput implements InputType {
  private final @NotNull String name;

  private final Input<Object> value;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  ActivityInstanceParameterInput(@NotNull String name, Input<Object> value) {
    this.name = name;
    this.value = value;
  }

  public @NotNull String name() {
    return this.name;
  }

  public @Nullable Object value() {
    return this.value.value;
  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public InputFieldMarshaller marshaller() {
    return new InputFieldMarshaller() {
      @Override
      public void marshal(InputFieldWriter writer) throws IOException {
        writer.writeString("name", name);
        if (value.defined) {
          writer.writeCustom("value", gov.nasa.jpl.aerie.scheduler.aerie.type.CustomType.ACTIVITYINSTANCEPARAMETERVALUE, value.value != null ? value.value : null);
        }
      }
    };
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int h = 1;
      h *= 1000003;
      h ^= name.hashCode();
      h *= 1000003;
      h ^= value.hashCode();
      $hashCode = h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof ActivityInstanceParameterInput) {
      ActivityInstanceParameterInput that = (ActivityInstanceParameterInput) o;
      return this.name.equals(that.name)
       && this.value.equals(that.value);
    }
    return false;
  }

  public static final class Builder {
    private @NotNull String name;

    private Input<Object> value = Input.absent();

    Builder() {
    }

    public Builder name(@NotNull String name) {
      this.name = name;
      return this;
    }

    public Builder value(@Nullable Object value) {
      this.value = Input.fromNullable(value);
      return this;
    }

    public Builder valueInput(@NotNull Input<Object> value) {
      this.value = Utils.checkNotNull(value, "value == null");
      return this;
    }

    public ActivityInstanceParameterInput build() {
      Utils.checkNotNull(name, "name == null");
      return new ActivityInstanceParameterInput(name, value);
    }
  }
}
